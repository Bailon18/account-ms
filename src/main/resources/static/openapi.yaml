openapi: 3.0.1
info:
  title: API de Microservicio de Cuentas
  version: 1.0.0
  description: |
    Microservicio para la gestión de cuentas bancarias y operaciones relacionadas.
    Permite realizar transacciones como depósitos, retiros y transferencias entre cuentas.

servers:
  - url: http://localhost:8081
    description: Servidor local
  - url: https://account-ms-production.up.railway.app
    description: Servidor de producción

tags:
  - name: Cuentas
    description: Gestión de cuentas bancarias
  - name: Transacciones
    description: Operaciones de transacciones en cuentas (depósitos, retiros, transferencias)

paths:
  /cuentas:
    get:
      summary: Obtener todas las cuentas
      description: Devuelve la lista completa de cuentas bancarias.
      tags:
        - Cuentas
      responses:
        '200':
          description: Lista de cuentas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cuenta'
              example:
                - id: 1
                  numeroCuenta: "1234567890"
                  saldo: 1500.50
                  tipoCuenta: "AHORROS"
                  clienteId: 1001
                  estado: "ACTIVO"

    post:
      summary: Crear nueva cuenta
      description: Crea una nueva cuenta bancaria.
      tags:
        - Cuentas
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cuenta'
            example:
              numeroCuenta: "9876543210"
              saldo: 500.00
              tipoCuenta: "CORRIENTE"
              clienteId: 1002
              estado: "ACTIVO"
      responses:
        '201':
          description: Cuenta creada exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cuenta'

  /cuentas/{id}:
    get:
      summary: Obtener cuenta por ID
      description: Devuelve los detalles de una cuenta específica por ID.
      tags:
        - Cuentas
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: ID de la cuenta a consultar.
      responses:
        '200':
          description: Detalles de la cuenta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cuenta'
              example:
                id: 2
                numeroCuenta: "2233445566"
                saldo: 1200.75
                tipoCuenta: "CORRIENTE"
                clienteId: 1003
                estado: "INACTIVO"
        '404':
          description: Cuenta no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Actualizar cuenta
      description: Actualiza los detalles de una cuenta específica por ID.
      tags:
        - Cuentas
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: ID de la cuenta a actualizar.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cuenta'
            example:
              saldo: 2000.00
              estado: "ACTIVO"
      responses:
        '200':
          description: Cuenta actualizada exitosamente
        '404':
          description: Cuenta no encontrada

    delete:
      summary: Eliminar cuenta
      description: Elimina una cuenta específica por ID.
      tags:
        - Cuentas
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: ID de la cuenta a eliminar.
      responses:
        '204':
          description: Cuenta eliminada exitosamente
        '404':
          description: Cuenta no encontrada

  /cuentas/cliente/{clienteId}:
    get:
      summary: Obtener cuentas por cliente
      description: Devuelve la lista de cuentas asociadas a un cliente específico.
      tags:
        - Cuentas
      parameters:
        - name: clienteId
          in: path
          schema:
            type: integer
          required: true
          description: ID del cliente para consultar sus cuentas.
      responses:
        '200':
          description: Lista de cuentas del cliente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cuenta'
              example:
                - id: 4
                  numeroCuenta: "6677889900"
                  saldo: 300.25
                  tipoCuenta: "AHORROS"
                  clienteId: 1004
                  estado: "CERRADO"
        '404':
          description: Cliente no encontrado

  /cuentas/depositar:
    put:
      summary: Realizar depósito
      description: Realiza un depósito en la cuenta especificada.
      tags:
        - Transacciones
      parameters:
        - name: numeroCuenta
          in: query
          schema:
            type: string
          required: true
          description: Número de cuenta en la que se va a realizar el depósito.
        - name: monto
          in: query
          schema:
            type: number
          required: true
          description: Monto a depositar.
      responses:
        '200':
          description: Depósito exitoso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cuenta'
        '404':
          description: Cuenta no encontrada

  /cuentas/retirar:
    put:
      summary: Realizar retiro
      description: Realiza un retiro en la cuenta especificada.
      tags:
        - Transacciones
      parameters:
        - name: numeroCuenta
          in: query
          schema:
            type: string
          required: true
          description: Número de cuenta de la cual se va a retirar el monto.
        - name: monto
          in: query
          schema:
            type: number
          required: true
          description: Monto a retirar.
      responses:
        '200':
          description: Retiro exitoso
        '404':
          description: Cuenta no encontrada

  /cuentas/realizar-transferencia:
    put:
      summary: Realizar transferencia entre cuentas
      description: Realiza una transferencia entre dos cuentas especificadas.
      tags:
        - Transacciones
      parameters:
        - name: cuentaOrigen
          in: query
          schema:
            type: string
          required: true
          description: Número de cuenta desde la cual se transferirá el monto.
        - name: cuentaDestino
          in: query
          schema:
            type: string
          required: true
          description: Número de cuenta a la cual se transferirá el monto.
        - name: monto
          in: query
          schema:
            type: number
          required: true
          description: Monto a transferir.
      responses:
        '200':
          description: Transferencia realizada con éxito
        '404':
          description: Cuenta no encontrada

components:
  schemas:
    Cuenta:
      type: object
      description: Representa los datos de una cuenta bancaria.
      properties:
        id:
          type: integer
        numeroCuenta:
          type: string
          description: "Número de cuenta bancaria con 10-12 dígitos"
        saldo:
          type: number
          description: Saldo actual de la cuenta
        tipoCuenta:
          type: string
          enum:
            - AHORROS
            - CORRIENTE
        clienteId:
          type: integer
          description: ID del cliente propietario de la cuenta
        estado:
          type: string
          enum:
            - ACTIVO
            - INACTIVO
            - CERRADO
          description: Estado actual de la cuenta

    ErrorResponse:
      type: object
      description: Estructura estándar para errores en las respuestas.
      properties:
        status:
          type: integer
        message:
          type: string
